{"version":3,"sources":["script.js"],"names":["canvas","getID","screen","getContext","gameSize","x","width","y","height","colors","player","obstacles","coin","wall","Game","Player","Coin","tick","update","draw","window","requestAnimationFrame","clearRect","Wall","fillStyle","fillRect","strokeRect","game","size","center","keyboarder","Keyboarder","isDown","KEYS","LEFT","RIGHT","DOWN","UP","id","document","getElementById","keyState","addEventListener","e","keyCode","bind","callback","S"],"mappings":"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","file":"script.c9fa4b40.map","sourceRoot":"..","sourcesContent":["\n// grabs canvas element from DOM\nconst canvas = getID('game')\n// gets the drawing context\nconst screen = canvas.getContext('2d')\n// notes the dimension of the game screen\nconst gameSize = {x: canvas.width, y: canvas.height}\n// notes the colors for all elements in the game\nconst colors = {\n  player: '#EAF2E3',\n  obstacles: '#857E7B',\n  screen: '#DB7F67',\n  coin: '#D6BA73',\n  wall: '#59344F'\n\n}\n\n// creates and instance of the game\nclass Game {\n  constructor () {\n    this.player = new Player()\n    this.coin = new Coin()\n    this.tick()\n  }\n  tick () {\n    this.update()\n    this.draw()\n    window.requestAnimationFrame(() => this.tick())\n  }\n  // draws the game\n  draw () {\n    screen.clearRect(0, 0, gameSize.x, gameSize.y)\n    this.Wall()\n    this.player.draw()\n    this.coin.draw()\n  }\n  // updates the game state\n  update () {\n    this.coin.update()\n    this.player.update()\n  }\n  Wall () {\n    screen.fillStyle = colors.screen\n    screen.fillRect(0, 0, gameSize.x, gameSize.y)\n    screen.strokeRect(150, 150, 200, 200)\n  }\n}\n\n// creates the player sprite and dictates how it acts\nclass Player {\n  constructor (game) {\n    this.size = {\n      x: 30,\n      y: 30\n    }\n    this.center = {\n      x: gameSize.x / 2 - 15,\n      y: gameSize.y / 2 - 15\n    }\n    this.keyboarder = new Keyboarder()\n    this.game = game\n  }\n  draw () {\n    screen.fillStyle = colors.player\n    screen.fillRect(this.center.x, this.center.y, this.size.x, this.size.y)\n  }\n  update () {\n    if (this.keyboarder.isDown(Keyboarder.KEYS.LEFT)) {\n      this.center.x -= 2\n      if (this.center.x <= 152) this.center.x = 152\n    }\n    if (this.keyboarder.isDown(Keyboarder.KEYS.RIGHT)) {\n      this.center.x += 2\n      if (this.center.x >= 318) this.center.x = 318\n    }\n    if (this.keyboarder.isDown(Keyboarder.KEYS.DOWN)) {\n      this.center.y += 2\n      if (this.center.y >= 318) this.center.y = 318\n    }\n    if (this.keyboarder.isDown(Keyboarder.KEYS.UP)) {\n      this.center.y -= 2\n      if (this.center.y <= 152) this.center.y = 152\n    }\n  }\n}\n\nclass Coin {\n  constructor (game) {\n    this.game = game\n    this.size = {\n      x: 25,\n      y: 25\n    }\n  }\n  draw () {\n    screen.fillStyle = colors.coin\n    screen.fillRect(200, 200, this.size.x, this.size.y)\n  }\n  update () {\n  }\n}\n\n// function to grab element from DOM\nfunction getID (id) {\n  return document.getElementById(id)\n}\n\nclass Keyboarder {\n  constructor () {\n    this.keyState = {}\n\n    window.addEventListener('keydown', function (e) {\n      this.keyState[e.keyCode] = true\n    }.bind(this))\n\n    window.addEventListener('keyup', function (e) {\n      this.keyState[e.keyCode] = false\n    }.bind(this))\n  }\n\n  isDown (keyCode) {\n    return this.keyState[keyCode] === true\n  }\n\n  on (keyCode, callback) {\n    window.addEventListener('keydown', function (e) {\n      if (e.keyCode === keyCode) {\n        callback()\n      }\n    })\n  }\n}\n\nKeyboarder.KEYS = {\n  LEFT: 37,\n  RIGHT: 39,\n  UP: 38,\n  DOWN: 40,\n  S: 83\n}\n\n// instatiates the Game class\nnew Game()\n"]}